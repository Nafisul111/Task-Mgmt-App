{"ast":null,"code":"var _jsxFileName = \"/home/nafisul/Downloads/Frontend/my-app/src/components/CountryCodesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchCountryCodes } from \"../API/apiServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryCodes = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetchCountryCodes().then(resp => {\n      if (resp !== null && resp !== void 0 && resp.data) {\n        setCountries(resp.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(countries); // Check if your countries data is correctly loaded\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Country Codes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full bg-white border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: \"Country Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2\",\n            children: \"Country Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: countries.length > 0 && countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: country.CountryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: country.CountryCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryCodes, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = CountryCodes;\nexport default CountryCodes;\nvar _c;\n$RefreshReg$(_c, \"CountryCodes\");","map":{"version":3,"names":["React","useEffect","useState","fetchCountryCodes","jsxDEV","_jsxDEV","CountryCodes","_s","countries","setCountries","then","resp","data","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","country","index","CountryName","CountryCode","_c","$RefreshReg$"],"sources":["/home/nafisul/Downloads/Frontend/my-app/src/components/CountryCodesPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchCountryCodes } from \"../API/apiServices\";\n\nconst CountryCodes = () => {\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        fetchCountryCodes().then((resp) => {\n            if (resp?.data) {\n                setCountries(resp.data);\n            }\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    console.log(countries);  // Check if your countries data is correctly loaded\n\n    return (\n        <div className=\"p-4\">\n            <h2 className=\"text-xl font-bold mb-4\">Country Codes</h2>\n            <table className=\"min-w-full bg-white border border-gray-300\">\n                <thead>\n                    <tr className=\"bg-gray-200\">\n                        <th className=\"border px-4 py-2\">Country Name</th>\n                        <th className=\"border px-4 py-2\">Country Code</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {countries.length > 0 && countries.map((country, index) => (\n                        <tr key={index} className=\"border\">\n                            <td className=\"border px-4 py-2\">{country.CountryName}</td>\n                            <td className=\"border px-4 py-2\">{country.CountryCode}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default CountryCodes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZE,iBAAiB,CAAC,CAAC,CAACO,IAAI,CAAEC,IAAI,IAAK;MAC/B,IAAIA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,IAAI,EAAE;QACZH,YAAY,CAACE,IAAI,CAACC,IAAI,CAAC;MAC3B;IACJ,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC,CAAC,CAAE;;EAEzB,oBACIH,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBb,OAAA;MAAIY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDjB,OAAA;MAAOY,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACzDb,OAAA;QAAAa,QAAA,eACIb,OAAA;UAAIY,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACvBb,OAAA;YAAIY,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClDjB,OAAA;YAAIY,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRjB,OAAA;QAAAa,QAAA,EACKV,SAAS,CAACe,MAAM,GAAG,CAAC,IAAIf,SAAS,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAClDrB,OAAA;UAAgBY,SAAS,EAAC,QAAQ;UAAAC,QAAA,gBAC9Bb,OAAA;YAAIY,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEO,OAAO,CAACE;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3DjB,OAAA;YAAIY,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEO,OAAO,CAACG;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFtDI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACf,EAAA,CApCID,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}