{"ast":null,"code":"const BASE_URL = \"https://jsonplaceholder.typicode.com/todos\";\nexport const fetchTasksAPI = async () => {\n  const res = await fetch(`${BASE_URL}?_limit=10`);\n  const data = await res.json();\n  return data.map(task => ({\n    id: task.id,\n    title: task.title,\n    description: \"Sample description\",\n    status: [\"To Do\", \"In Progress\", \"Done\"][task.id % 3]\n  }));\n};\nexport const addTaskAPI = async task => {\n  const res = await fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(task)\n  });\n  return await res.json();\n};\nexport const updateTaskAPI = async ({\n  id,\n  ...task\n}) => {\n  const res = await fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(task)\n  });\n  return await res.json();\n};","map":{"version":3,"names":["BASE_URL","fetchTasksAPI","res","fetch","data","json","map","task","id","title","description","status","addTaskAPI","method","headers","body","JSON","stringify","updateTaskAPI"],"sources":["/home/nafisul/Downloads/Frontend/my-app/src/features/taskAPI.js"],"sourcesContent":["const BASE_URL = \"https://jsonplaceholder.typicode.com/todos\";\n\nexport const fetchTasksAPI = async () => {\n  const res = await fetch(`${BASE_URL}?_limit=10`);\n  const data = await res.json();\n  return data.map((task) => ({\n    id: task.id,\n    title: task.title,\n    description: \"Sample description\",\n    status: [\"To Do\", \"In Progress\", \"Done\"][task.id % 3],\n  }));\n};\n\nexport const addTaskAPI = async (task) => {\n  const res = await fetch(BASE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(task),\n  });\n  return await res.json();\n};\n\nexport const updateTaskAPI = async ({ id, ...task }) => {\n  const res = await fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(task),\n  });\n  return await res.json();\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4CAA4C;AAE7D,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,YAAW,CAAC;EAChD,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;IACzBC,EAAE,EAAED,IAAI,CAACC,EAAE;IACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;IACjBC,WAAW,EAAE,oBAAoB;IACjCC,MAAM,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC,CAACJ,IAAI,CAACC,EAAE,GAAG,CAAC;EACtD,CAAC,CAAC,CAAC;AACL,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOL,IAAI,IAAK;EACxC,MAAML,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;IAChCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;EAC3B,CAAC,CAAC;EACF,OAAO,MAAML,GAAG,CAACG,IAAI,CAAC,CAAC;AACzB,CAAC;AAED,OAAO,MAAMa,aAAa,GAAG,MAAAA,CAAO;EAAEV,EAAE;EAAE,GAAGD;AAAK,CAAC,KAAK;EACtD,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,IAAGQ,EAAG,EAAC,EAAE;IAC3CK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;EAC3B,CAAC,CAAC;EACF,OAAO,MAAML,GAAG,CAACG,IAAI,CAAC,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}