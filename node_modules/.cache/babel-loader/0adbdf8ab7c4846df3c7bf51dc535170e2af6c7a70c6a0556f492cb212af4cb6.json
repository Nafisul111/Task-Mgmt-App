{"ast":null,"code":"export const apiRequest = async (apiName, method, data = {}) => {\n  if (!apiConfig[apiName]) {\n    console.error(`API configuration for ${apiName} not found`);\n    return null;\n  }\n  const {\n    end_point,\n    body\n  } = apiConfig[apiName];\n  const requestOptions = {\n    method: apiConfig.request[method.toLowerCase()],\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    mode: \"cors\",\n    // Ensure CORS mode is enabled\n    credentials: \"include\",\n    // Include credentials if API requires authentication\n    body: method.toLowerCase() !== \"get\" ? JSON.stringify({\n      ...body,\n      ...data\n    }) : null\n  };\n  try {\n    const response = await fetch(end_point, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"API Request Failed:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["apiRequest","apiName","method","data","apiConfig","console","error","end_point","body","requestOptions","request","toLowerCase","headers","Accept","mode","credentials","JSON","stringify","response","fetch","ok","Error","status","json"],"sources":["/home/nafisul/Downloads/Frontend/my-app/src/API/apiServices.js"],"sourcesContent":["export const apiRequest = async (apiName, method, data = {}) => {\n  if (!apiConfig[apiName]) {\n    console.error(`API configuration for ${apiName} not found`);\n    return null;\n  }\n\n  const { end_point, body } = apiConfig[apiName];\n  const requestOptions = {\n    method: apiConfig.request[method.toLowerCase()],\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    mode: \"cors\", // Ensure CORS mode is enabled\n    credentials: \"include\", // Include credentials if API requires authentication\n    body:\n      method.toLowerCase() !== \"get\"\n        ? JSON.stringify({ ...body, ...data })\n        : null,\n  };\n\n  try {\n    const response = await fetch(end_point, requestOptions);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"API Request Failed:\", error);\n    return null;\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EAC9D,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,EAAE;IACvBI,OAAO,CAACC,KAAK,CAAE,yBAAwBL,OAAQ,YAAW,CAAC;IAC3D,OAAO,IAAI;EACb;EAEA,MAAM;IAAEM,SAAS;IAAEC;EAAK,CAAC,GAAGJ,SAAS,CAACH,OAAO,CAAC;EAC9C,MAAMQ,cAAc,GAAG;IACrBP,MAAM,EAAEE,SAAS,CAACM,OAAO,CAACR,MAAM,CAACS,WAAW,CAAC,CAAC,CAAC;IAC/CC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,MAAM,EAAE;IACV,CAAC;IACDC,IAAI,EAAE,MAAM;IAAE;IACdC,WAAW,EAAE,SAAS;IAAE;IACxBP,IAAI,EACFN,MAAM,CAACS,WAAW,CAAC,CAAC,KAAK,KAAK,GAC1BK,IAAI,CAACC,SAAS,CAAC;MAAE,GAAGT,IAAI;MAAE,GAAGL;IAAK,CAAC,CAAC,GACpC;EACR,CAAC;EAED,IAAI;IACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAACZ,SAAS,EAAEE,cAAc,CAAC;IACvD,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;IAC3D;IACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO,IAAI;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}