{"ast":null,"code":"var _jsxFileName = \"/home/nafisul/Downloads/Frontend/my-app/src/components/Board.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTasks, addTask, updateTask } from \"../features/tasks/taskSlice\";\nimport Column from \"./Column\";\nimport TaskFormModal from \"./TaskFormModal\";\nimport NoteContext from \"../Ncontext/NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks.items);\n  const [showModal, setShowModal] = useState(false);\n  useContext(NoteContext);\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n  const handleDrop = (taskId, newStatus) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task && task.status !== newStatus) {\n      dispatch(updateTask({\n        ...task,\n        status: newStatus\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4 flex-col xs:flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold pb-2 xs:pb-auto\",\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 \",\n      children: [\"To Do\", \"In Progress\", \"Done\"].map((status, index) => /*#__PURE__*/_jsxDEV(Column, {\n        title: status,\n        tasks: tasks,\n        IndexVal: index,\n        onDrop: handleDrop\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(TaskFormModal, {\n      onClose: () => setShowModal(false),\n      onAdd: task => dispatch(addTask(task))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"o1wEUGJzJEknq52Lsjpwx4dzq6U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useContext","useEffect","useState","useDispatch","useSelector","fetchTasks","addTask","updateTask","Column","TaskFormModal","NoteContext","jsxDEV","_jsxDEV","Board","_s","dispatch","tasks","state","items","showModal","setShowModal","handleDrop","taskId","newStatus","task","find","t","id","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","title","IndexVal","onDrop","onClose","onAdd","_c","$RefreshReg$"],"sources":["/home/nafisul/Downloads/Frontend/my-app/src/components/Board.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTasks, addTask, updateTask } from \"../features/tasks/taskSlice\";\nimport Column from \"./Column\";\nimport TaskFormModal from \"./TaskFormModal\";\nimport NoteContext from \"../Ncontext/NoteContext\";\n\nconst Board = () => {\n    const dispatch = useDispatch();\n    const tasks = useSelector(state => state.tasks.items);\n    const [showModal, setShowModal] = useState(false);\nuseContext(NoteContext);\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    const handleDrop = (taskId, newStatus) => {\n        const task = tasks.find(t => t.id === taskId);\n        if (task && task.status !== newStatus) {\n            dispatch(updateTask({ ...task, status: newStatus }));\n        }\n    };\n\n    return (\n        <div className=\"p-4\">\n            <div className=\"flex justify-between items-center mb-4 flex-col xs:flex-row\">\n                <h1 className=\"text-2xl font-bold pb-2 xs:pb-auto\">Kanban Board</h1>\n                <button onClick={() => setShowModal(true)} className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n                    Add New Task\n                </button>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 \">\n                {[\"To Do\", \"In Progress\", \"Done\"].map((status, index) => (\n                    <Column key={status} title={status} tasks={tasks} IndexVal={index} onDrop={handleDrop} />\n                ))}\n            </div>\n            {showModal && (\n                <TaskFormModal\n                    onClose={() => setShowModal(false)}\n                    onAdd={task => dispatch(addTask(task))}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default Board"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}